#include "rush02.h"

int	am_i_a_number(char *str)
{
	int	i;

	i = 0;
	while (str[i])
	{
		if (str[i] < '0' || str[i] > '9')
			return (0);
		i ++;
	}
	return (1);
}

t_number	*ft_tab(cahr *dico_file, t_number *tab)
{

}

t_number	*ft_init_dico(char *dico_file, t_number *tab)
{
	int		i;
	int		fd;
	char	buf_num[150];
	char	buf_text[100];
	char	buffer[1];
	int		idico;

	idico = 0;
	tab = malloc((sizeof(t_number) * 41));
	fd = open(dico_file, O_RDONLY);
	if (fd < 0)
		report_error();
	else
	{
		while (read(fd, buffer, 1) > 0)
		{
			i = 0;
			while (buffer[0] >= '0' && buffer[0] <= '9' && i < 38)
			{
				buf_num[i] = buffer[0];
				i ++;
				read(fd, buffer, 1);
			}
			while (buffer[0] == ' ' || buffer[0] == ':')
				read(fd, buffer, 1);
			i = 0;
			while (buffer[0] != '\n' && i < 60)
			{
				buf_text[i] = buffer[0];
				i ++;
				read(fd, buffer, 1);
			}
			buf_text[i] = '\0';
			if (buffer[0] == '\n')
			{
				tab[idico].number = ft_strdup(buf_num);
				tab[idico].letter = ft_strdup(buf_text);
				idico ++;
			}
		}
		tab[40].number = "1000000000000000000000000000000000000";
		tab[40].letter = "undecillion";
	}
	return (tab);
}

void	ft_dico(char *dico, char *str)
{
	int			i;
	t_number	*tab;
	int			nb;

	tab = NULL;
	i = am_i_a_number(str);
	if (i == 0)
		report_error();
	tab = ft_init_dico(dico, tab);
	nb = ft_atoi(str);
	if (nb <= 100)
		display_below_100(nb, tab);
}

//printf("Wait for updates !");